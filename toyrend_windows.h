#ifndef DPI_ENUMS_DECLARED
	typedef enum
	{
		PROCESS_DPI_UNAWARE = 0,
		PROCESS_SYSTEM_DPI_AWARE = 1,
		PROCESS_PER_MONITOR_DPI_AWARE = 2
	} PROCESS_DPI_AWARENESS;
	typedef enum
	{
		MDT_EFFECTIVE_DPI = 0,
		MDT_ANGULAR_DPI = 1,
		MDT_RAW_DPI = 2,
		MDT_DEFAULT = MDT_EFFECTIVE_DPI
	} MONITOR_DPI_TYPE;
#endif

#ifndef _DPI_AWARENESS_CONTEXTS_
	DECLARE_HANDLE(DPI_AWARENESS_CONTEXT);
	#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE (DPI_AWARENESS_CONTEXT)-3
#endif

#ifndef DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE
	#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE ((DPI_AWARENESS_CONTEXT)-3)
#endif

#ifndef DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2
	#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 ((DPI_AWARENESS_CONTEXT)-4)
#endif

#define Assert(Condition) if(Condition); else __debugbreak()

#if 0
typedef struct
{
	HWND Window;
	HBITMAP hBitmap;
	BITMAPINFO
} renderer_system_data;
#endif


static WCHAR WINDOW_TITLE[] = L"toyrend";
static WCHAR WNDCLASS_NAME[] = L"toyrend_wndclass";
static DWORD RENDERER_THREAD_ID;
